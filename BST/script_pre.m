function sFilesEpoch = script_pre(SubjectNames, RawFiles, NoiseFiles, RawEventFiles, iSubj)

% Process: Create link to raw file
sFilesRun = bst_process('CallProcess', 'process_import_data_raw', [], [], ...
    'subjectname',    SubjectNames{iSubj}, ...
    'datafile',       {RawFiles{iSubj}, 'FIF'}, ...
    'channelreplace', 1, ...
    'channelalign',   1, ...
    'evtmode',        'value');

% Process: Create link to raw file
sFilesNoise = bst_process('CallProcess', 'process_import_data_raw', [], [], ...
    'subjectname',    SubjectNames{iSubj}, ...
    'datafile',       {NoiseFiles{iSubj}, 'FIF'}, ...
    'channelreplace', 1, ...
    'channelalign',   1, ...
    'evtmode',        'value');

% Process: Import events from file
bst_process('CallProcess', 'process_evt_import', sFilesRun, [], ...
    'evtfile', {RawEventFiles{iSubj}, 'BST'}, ...
    'evtname', 'New');

% Process: Warp default anatomy
bst_process('CallProcess', 'process_warp', sFilesRun, [], ...
    'usedefault', 2, ...  % Warp
    'tolerance',  2);

% Process: Refine registration
bst_process('CallProcess', 'process_headpoints_refine', sFilesRun, []);

% Process: Notch filter: 50Hz 100Hz 150Hz
sFilesRaw = [sFilesRun, sFilesNoise];
sFilesNotch = bst_process('CallProcess', 'process_notch', sFilesRaw, [], ...
    'sensortypes', 'MEG, EEG', ...
    'freqlist',    [50, 100, 150], ...
    'cutoffW',     1, ...
    'useold',      0, ...
    'read_all',    0);

% Process: Delete and rename files
bst_process('CallProcess', 'process_delete', sFilesRaw, [], ...
    'target', 2);  % Delete folders
    sFilesRun = {sFilesNotch(1).FileName};
    sFilesNoise = {sFilesNotch(2).FileName};


% Process: Add time offset
sFilesDelay = bst_process('CallProcess', 'process_evt_timeoffset', sFilesRun, [], ...
    'info',      [], ...
    'eventname', 'B, F', ...
    'offset',    0.056);

if strcmp(SubjectNames{iSubj}, 'sub11')
    % Process: Detect eye blinks
    bst_process('CallProcess', 'process_evt_detect_eog', sFilesDelay, [], ...
        'channelname', 'EOG061', ...
        'timewindow',  [48, 1114.999], ...
        'eventname',   'blink');
    % Process: SSP EOG: blink
    sFilesSSP = bst_process('CallProcess', 'process_ssp_eog', sFilesDelay, [], ...
        'eventname',   'blink', ...
        'sensortypes', 'MEG', ...
        'usessp',      1, ...
        'select',      1);
else
    % Process: Detect heartbeats
    bst_process('CallProcess', 'process_evt_detect_ecg', sFilesDelay, [], ...
        'channelname', 'ECG062', ...
        'timewindow',  [48, 1114.999], ...
        'eventname',   'cardiac');
    % Process: Detect eye blinks
    bst_process('CallProcess', 'process_evt_detect_eog', sFilesDelay, [], ...
        'channelname', 'EOG061', ...
        'timewindow',  [48, 1114.999], ...
        'eventname',   'blink');
    % Process: Remove simultaneous
    bst_process('CallProcess', 'process_evt_remove_simult', sFilesDelay, [], ...
        'remove', 'cardiac', ...
        'target', 'blink', ...
        'dt',     0.25, ...
        'rename', 0);
    % Process: SSP ECG: cardiac
    sFilesSSP = bst_process('CallProcess', 'process_ssp_ecg', sFilesDelay, [], ...
        'eventname',   'cardiac', ...
        'sensortypes', 'MEG', ...
        'usessp',      1, ...
        'select',      1);
    % Process: SSP EOG: blink
    bst_process('CallProcess', 'process_ssp_eog', sFilesSSP, [], ...
        'eventname',   'blink', ...
        'sensortypes', 'MEG', ...
        'usessp',      1, ...
        'select',      1);
end
% Process: Import MEG/EEG: Events
sFilesEpoch = bst_process('CallProcess', 'process_import_data_event', sFilesSSP, [], ...
    'subjectname', SubjectNames{iSubj}, ...
    'condition',   '', ...
    'eventname',   'B, F', ...
    'timewindow',  [], ...
    'epochtime',   [0, 120], ...
    'createcond',  0, ...
    'ignoreshort', 1, ...
    'usectfcomp',  1, ...
    'usessp',      1, ...
    'freq',        [], ...
    'baseline',    []);

% Process: Compute covariance (noise or data)
bst_process('CallProcess', 'process_noisecov', sFilesNoise, [], ...
    'baseline',       [], ...
    'sensortypes',    'MEG', ...
    'target',         1, ...  % Noise covariance     (covariance over baseline time window)
    'dcoffset',       1, ...  % Block by block, to avoid effects of slow shifts in data
    'identity',       0, ...
    'copycond',       1, ...
    'copysubj',       0, ...
    'replacefile',    1);  % Replace

% Process: Snapshot: Noise covariance
bst_process('CallProcess', 'process_snapshot', sFilesNoise, [], ...
    'target',  3, ...  % Noise covariance
    'Comment', 'Noise covariance');